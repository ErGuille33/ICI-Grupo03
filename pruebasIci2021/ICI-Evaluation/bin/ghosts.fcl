FUNCTION_BLOCK FuzzyGhosts	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	PACMANdistance : REAL;
	PACMANconfidence : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	findPacman : REAL;
END_VAR

FUZZIFY PACMANdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PACMANconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

DEFUZZIFY findPacman			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


RULEBLOCK GhostsRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF PACMANdistance IS far AND PACMANconfidence IS low THEN findPacman IS emergency;
	RULE 2 : IF PACMANconfidence IS medium THEN findPacman IS nervious;
	RULE 3 : IF PACMANdistance IS near THEN findPacman IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK

