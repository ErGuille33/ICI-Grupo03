FUNCTION_BLOCK FuzzyPacman	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;
	BLINKYconfidence : REAL;
	PINKYconfidence : REAL;
	INKYconfidence : REAL;
	SUEconfidence : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	pacManAction : REAL;
END_VAR

FUZZIFY BLINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY INKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY SUEdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY BLINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

FUZZIFY PINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

FUZZIFY INKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

FUZZIFY SUEconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

DEFUZZIFY pacManAction			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM chasePill := (0,1) (5,1) (20,0);
	TERM chaseGhost := (20,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


RULEBLOCK GhostsRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF BLINKYdistance IS near AND BLINKYconfidence IS low THEN pacManAction IS chaseGhost;
	RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS low THEN pacManAction IS chaseGhost;
	RULE 3 : IF INKYdistance IS near AND INKYconfidence IS low THEN pacManAction IS chaseGhost;
	RULE 4 : IF SUEdistance IS near AND SUEconfidence IS low THEN pacManAction IS chaseGhost;
	
	RULE 5 : IF BLINKYdistance IS high THEN pacManAction IS chasePill;
	RULE 6 : IF PINKYdistance IS high THEN pacManAction IS chasePill;
	RULE 7 : IF INKYdistance IS high THEN pacManAction IS chasePill;
	RULE 8 : IF SUEdistance IS high THEN pacManAction IS chasePill;
	
	RULE 8 : IF BLINKYconfidence IS high THEN pacManAction IS chasePill;
	RULE 9 : IF BLINKYconfidence IS high THEN pacManAction IS chasePill;
	RULE 10 : IF BLINKYconfidence IS high THEN pacManAction IS chasePill;
	RULE 11 : IF BLINKYconfidence IS high THEN pacManAction IS chasePill;
	
	RULE 12 : IF BLINKYconfidence IS medium THEN pacManAction IS chasePill;
	RULE 13 : IF BLINKYconfidence IS medium THEN pacManAction IS chasePill;
	RULE 14 : IF BLINKYconfidence IS medium THEN pacManAction IS chasePill;
	RULE 15 : IF BLINKYconfidence IS medium THEN pacManAction IS chasePill;
	
	RULE 16 : IF BLINKYdistance IS medium THEN pacManAction IS chasePill;
	RULE 17 : IF PINKYdistance IS medium THEN pacManAction IS chasePill;
	RULE 18 : IF INKYdistance IS medium THEN pacManAction IS chasePill;
	RULE 19 : IF SUEdistance IS medium THEN pacManAction IS chasePill;
	
END_RULEBLOCK

END_FUNCTION_BLOCK

